// <auto-generated />
using System;
using MatchMe.Opportunities.Infrastructure.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MatchMe.Opportunities.Infrastructure.EF.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    partial class ReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("opportunities")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MatchMe.Opportunities.Infrastructure.EF.Models.OpportunityReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Opportunity", "opportunities");
                });

            modelBuilder.Entity("MatchMe.Opportunities.Infrastructure.EF.Models.OpportunitySkillReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("boolean");

                    b.Property<int>("Max_Experience")
                        .HasColumnType("integer");

                    b.Property<int>("Min_Experience")
                        .HasColumnType("integer");

                    b.Property<Guid?>("OpportunityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OpportunityId");

                    b.ToTable("OpportunitySkill", "opportunities");
                });

            modelBuilder.Entity("MatchMe.Opportunities.Infrastructure.EF.Models.OpportunitySkillReadModel", b =>
                {
                    b.HasOne("MatchMe.Opportunities.Infrastructure.EF.Models.OpportunityReadModel", "Opportunity")
                        .WithMany("Skills")
                        .HasForeignKey("OpportunityId");

                    b.Navigation("Opportunity");
                });

            modelBuilder.Entity("MatchMe.Opportunities.Infrastructure.EF.Models.OpportunityReadModel", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
